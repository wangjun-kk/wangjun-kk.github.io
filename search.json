[{"title":"Hexo+Gitee搭建个人博客","url":"/2021/04/07/Hexo-Gitee%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","content":"环境要求\nGit\n\nNodeJs\n\ngitee账户\n\n\n步骤\n全局安装hexo\nnpm install -g hexo-cli\n\n准备blog项目的目录下初始化项目【wangjun-blog】\nhexo init wangjun-blog\n\n进入项目根目录\ncd wangjun-blog\nnpm install\n\n本地开启调试服务\nhexo s\n\n\nhexo命令\n写文章 -  hexo new &quot;文章名字&quot;\n\n清理缓存 - hexo clean\n\n生成页面 - hexo g\n\ngit上传 - hexo d\n\n此处上传至gitee (也可选择github等，具体在配置文件_config.yml中配置)\n\n\n\n部署到gitee\n安装git插件 - npm install hexo-deployer-git\n\n配置文件中配置\n\nhexo g\n\nhexo d\n\n\n参考文档\n官方推荐主题库 https://hexo.io/themes\nhexo官方文档 https://hexo.io/zh-cn/docs\nkeep主题文档 https://keep-docs.xpoet.cn\n简书某作者文章 https://www.jianshu.com/p/1f23f94b73d4\n\n","categories":["前端"],"tags":["hexo","gitee"]},{"title":"OSI七层网络模型","url":"/2021/05/24/OSI%E4%B8%83%E5%B1%82%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/","content":"\n\n\nOSI七层网络模型\nTCP/IP四层概念模型\n网络协议\n\n\n\n应用层\n应用层↓\nHTTP,FTP,TFTP,SMTP,NFS,DNS,Telnet,SNMP\n\n\n表示层\n↑\n\n\n\n会话层\n↑\n\n\n\n传输层\n传输层\nTCP,UDP\n\n\n网络层\n网络层\nIP (IPv4 · IPv6),ICMP,ARP,RARP,RIP\n\n\n数据链路层\n数据链路层↓\n\n\n\n物理层\n↑\nIEEE 802.1A,IEEE 802.2到IEEE 802.11\n\n\nTelnet：远程\nSMTP：邮件\nFTP：文件传输\nARP：地址解析协议，IP =&gt; MAC\nRARP：反向地址转换协议，MAC =&gt; IP\n","categories":["网络"],"tags":["网络","协议"]},{"title":"Typora+PicGo+阿里云OSS实现图片自由","url":"/2021/04/07/Typora-PicGo-%E9%98%BF%E9%87%8C%E4%BA%91OSS%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%87%AA%E7%94%B1/","content":"Typora设置\nPicGo我选择了下载PicGo（app）\n还可以选择PicGo-Core(command line)【这方式我没有践行，应该是内置了组件，搭配一下图床配置文件的样子】\n优点\n可视化操作\n\n脱离Typora也能单独用\n\n\n缺点\n要下载安装软件\n\n\n阿里云OSS\n注册阿里云 https://www.aliyun.com\n\n买产品服务（我买了9块钱一年，真香）\n\n\n\n参考文档知乎某作者文章 https://zhuanlan.zhihu.com/p/138878534\n","categories":["工具"],"tags":["Typora","PicGo","阿里云OSS","图床"]},{"title":"github pages 绑定域名","url":"/2021/08/27/github-pages-%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/","content":"一些描述hexo搭建的博客，github page发布后，想绑定到个人域名🥺。\n准备材料\n域名\nGitHub Page\n\n开始行动一、生成CNAME文件方法一（推荐）code根目录新建一个CNAME文件，内容为自己的域名\n注意点：CNAME文件名称全大写，无后缀\n\n\n如果也是hexo搭建的博客，则在source文件夹下建立CNAME文件即可，hexo g 后会在public文件夹下对应生成\n\n方法二在settings中设置：\n\n缺点：每次 git commit 后CNAME文件就没有了，需要重新设置一遍。\n所以推荐方法一，一劳永逸。\n二、DNS解析到你域名控制台中设置，哪买的去哪设置哦\n\n添加CNAME记录，指向你的GitHub Page地址 =&gt; github_username.github.io\n添加A记录也一样，指向IP地址，个人感觉CNAME更便捷😂\n三、开启HTTPS到GitHub仓库的 settings =》Pages中打上勾☑️\n\n至此，你的网站已经可以访问啦\n四、CDN加速使用cloudflare，免费版提供基础功能。\nhttps://dash.cloudflare.com/\n\n注册\n添加自己的站点\n根据他的提示一步步操作\n\n  \n  其中DNS服务器去自己的域名控制台修改哦\n  \n\n选项配置\n\n默认选择的是第二个灵活（Flexible）选项，但是会出现http和https之间重定向次数过多，网页无法正常打开，改选完全（Full）就可以了，严格模式好像也可以的。\n\n\n\n\n然后优化速度的选项我基本上能选的都选上了，大家自己斟酌一下后选择吧😂\n\n这个我开了之后导致部署的评论插件云函数不加载了🤦‍♀️手欠🤦‍♀️\n好了，倒腾结束啦🎉\n参考资料\n\nhttps://monkeywie.cn/2020/08/20/fast-github-page-with-cloudflare/\nhttps://blog.csdn.net/weixin_29405101/article/details/112659223\n\n\n","categories":["工具"],"tags":["github","域名"]},{"title":"升级node至指定版本","url":"/2021/07/28/%E5%8D%87%E7%BA%A7node%E8%87%B3%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC/","content":"\n清除缓存\nnpm cache clean -f\n安装n模块（n模块是专门用来管理nodejs版本的）\nnpm install -g n\n更新node\nn stable // 把当前系统的 Node 更新成最新的 “稳定版本”n lts // 长期支持版n latest // 最新版n 10.14.2 // 指定安装版本\n查看node版本\nNode -v\n\n","categories":["前端"],"tags":["node"]},{"title":"本地仓库关联远程仓库","url":"/2021/04/26/%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%85%B3%E8%81%94%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/","content":"问题本地仓库和远程仓库实际上是独立的两个仓库\n解决方法1.SourceTree 仓库设置\n2.执行命令$git pull origin master --allow-unrelated-histories\n\n命令作用：合并两个独立启动仓库的历史\n\n","categories":["工具"],"tags":["SourceTree","git"]},{"title":"自动部署Gitee Pages 服务","url":"/2021/04/09/%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2Gitee-Pages-%E6%9C%8D%E5%8A%A1/","content":"前几天用hexo框架倒腾了一个博客，部署到Gitee Pages时发现每次都要手动更新一下，略有不便，于是百度了一下，发现自动部署要花RMB，然后继续百度发现了一个小工具【gitee-publish】\ngitee-publish主要利用了puppeteer来实现\n\ngitee-publish传送门 https://gitee.com/hepingxm/gitee-pages-autopublish\npuppeteerPuppeteer是谷歌官方出品的一个通过DevTools协议控制headless Chrome的Node库。 可以通过Puppeteer的提供的api直接控制Chrome模拟大部分用户操作来进行UI Test或者作为爬虫访问页面来收集数据。\npuppeteer传送门 https://github.com/puppeteer/puppeteer\n","categories":["工具"],"tags":["gitee","puppeteer"]}]